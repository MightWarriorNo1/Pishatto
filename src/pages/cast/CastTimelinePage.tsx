import React, { useState } from 'react';
import { Bell, SlidersHorizontal, Plus } from 'lucide-react';

const stories = [
    { name: '‚óé „Åà„Åæ‚óé', img: '/assets/avatar/avatar-1.png' },
    { name: 'meüåô', img: '/assets/avatar/avatar-2.png' },
    { name: 'müê±Â§ßÈò™', img: '/assets/avatar/female.png' },
    { name: '„Åª„ÅÆ„Åã/‚Ä¶', img: '/assets/avatar/1.jpg' },
    { name: '„ÇÜ„Çä„ÅÇ‚Ä¶', img: '/assets/avatar/knight_3275232.png' },
];

const posts = [
    {
        user: '„Å´„ÇÉ„Çì„Åìüêæ',
        time: '20:19',
        text: '„Å≤„Åæ„Åó„Å¶„Åæ„Åô\nÈÉΩÂÜÖË™ò„Å£„Å¶„Åè„Å†„Åï„ÅÑ',
        img: '/assets/avatar/francesco-ZxNKxnR32Ng-unsplash.jpg',
        likes: 0,
        avatar: '/assets/avatar/avatar-2.png',
    },
    {
        user: '„ÅÇ„ÇÑ„Å™„Å°„ÇÉ„Çì',
        time: 'Âèó‰ªò„Éª20:18',
        text: 'ÊÄ•„ÅßÁî≥„ÅóË®≥„Å™„ÅÑ„ÅåÊñ∞ÂÆø„ÅÆ„Å∂„Çä‰∏≠Èáé21ÊôÇ„Åã„ÇâË°å„Åë„ÇãÊñπ„ÅÑ„Åæ„Åõ„Çì„Åãüò≠üò≠„Éâ„Çø„Ç≠„É£„É≥„Åï„Çå„Å¶Âõ∞„Å£„Å¶„Åæ„Åô‰∫àÁ¥Ñ„Åó„Å¶„Åæ„Åô‚Ä¶',
        likes: 1,
        avatar: '/assets/avatar/1.jpg',
    },
    {
        user: '„ÇÇ„ÇÅ„Çì„Å°„ÇÉ„Çì',
        time: '20:16',
        text: '',
        likes: 0,
        avatar: '/assets/avatar/female.png',
    },
    {
        user: '„Åï„Åè„Çâ',
        time: '19:55',
        text: '‰ªäÊó•„ÅØ„ÅÑ„ÅÑÂ§©Ê∞ó„Åß„Åô„Å≠ÔºÅ',
        img: '/assets/avatar/harald-hofer-pKoKW6UQOuk-unsplash.jpg',
        likes: 2,
        avatar: '/assets/avatar/knight_3275232.png',
    },
    {
        user: '„Ç∏„Éß„É≥',
        time: '19:30',
        text: 'Êñ∞„Åó„ÅÑÂèãÈÅî„Åå„Åß„Åç„Åæ„Åó„ÅüÔºÅ',
        img: '/assets/avatar/jf-brou-915UJQaxtrk-unsplash.jpg',
        likes: 3,
        avatar: '/assets/avatar/avatar-1.png',
    },
];

const castPosts = [
    {
        user: 'Müêµ',
        role: '‰ºöÁ§æÂì°',
        time: '01/29(Ê∞¥) 01:09',
        text: 'Â•≥„ÅÆÂ≠êÂÅ¥„ÇÇÂí≤„ÅèÊôÇ„Å´„Å§„Å∂„ÇÑ„Åç„ÇíË°®Á§∫„Åô„Çã„Ç≤„Çπ„ÉàÈÅ∏„Åπ„Çã„Çà„ÅÜ„Å´„Åó„Å¶Ê¨≤„Åó„ÅÑ„Åß„Åô„ÄÇÔºàÂêàÊµÅÊ∏à„Åø„ÅÆ„Ç≤„Çπ„Éà„Å´„ÅØ„Å§„Å∂„ÇÑ„ÅçÈùûË°®Á§∫„Å´„Åô„Çã„ÄÅ„Å™„Å©Ôºâ',
        likes: 3,
        avatar: '/assets/avatar/avatar-1.png',
        badge: '/assets/icons/crown.png',
        badgeLabel: '„Ç¥„Éº„É´„Éâ„Ç≠„É£„Çπ„Éà',
    },
    {
        user: '„Ç≥„É≥„Ç∑„Çß„É´„Ç∏„É•',
        time: '01/27(Êúà) 22:55',
        text: '„ÅÑ„Å§„ÇÇpishattoÂÖ≠Êú¨Êú®„Ç™„Éï„Ç£„Çπ„ÅÆ„ÅîÂà©Áî®„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åôüê§\n\nÁî≥„ÅóË®≥„ÅÇ„Çä„Åæ„Åõ„Çìüôá\nÊú¨Êó•1/27(Êúà)„ÅØ23:30‰ª•Èôç\nÂÖ≠Êú¨Êú®„Ç™„Éï„Ç£„Çπ„Å´\n„Çπ„Çø„ÉÉ„Éï„ÅåÂú®‰∏≠„Åó„Å™„ÅÑ„Åü„ÇÅ\nÂæÖÊ©ü„ÅÆ„ÅîÂà©Áî®„ÅØ„Åß„Åç„Åã„Å≠„Åæ„Åôüôá\n\n„ÅîËø∑ÊÉë„Åä„Åã„Åë„Åó„Åæ„Åô„Åå\n„ÅîÁêÜËß£„ÅÆÁ®ã„ÅäÈ°ò„ÅÑ„ÅÑ„Åü„Åó„Åæ„Åô\n\nÊú¨Êó•„ÅØpishatto„Éë„Çπ„Éù„Éº„Éà„Å´„ÅÇ„Çã\nÂæÖÊ©üÂ†¥ÊâÄ„Çí„Åú„Å≤„ÅîÂà©Áî®„Åè„Å†„Åï„ÅÑüòä\n\n‚ñºÂÖ≠Êú¨Êú®ÈßÖ‰ªòËøë\n„Éª„Éè„Éã„Éà„É©\n„ÉªmuseÂÖ≠Êú¨Êú®Â∫ó\n„ÉªBloom Lounge',
        likes: 1,
        avatar: '/assets/avatar/knight_3275232.png',
        badge: null,
        badgeLabel: null,
    },
];

const CastTimelinePage: React.FC = () => {
    const [tab, setTab] = useState<'all' | 'cast'>('all');
    return (
        <div className="max-w-md mx-auto pb-20 min-h-screen bg-white">
            {/* Header */}
            <div className="flex items-center justify-between px-4 pt-4 pb-2">
                <span className="text-2xl text-gray-700">
                    <Bell />
                </span>
                <span className="text-xl font-bold">„Å§„Å∂„ÇÑ„Åç</span>
                <span className="text-2xl text-gray-700">
                    <SlidersHorizontal />
                </span>
            </div>
            {/* Tabs */}
            <div className="flex items-center border-b">
                <button onClick={() => setTab('all')} className={`flex-1 py-3 text-center font-bold text-base ${tab === 'all' ? 'text-black border-b-2 border-black' : 'text-gray-400'}`}>„Åø„Çì„Å™„ÅÆ„Å§„Å∂„ÇÑ„Åç</button>
                <button onClick={() => setTab('cast')} className={`flex-1 py-3 text-center font-bold text-base ${tab === 'cast' ? 'text-black border-b-2 border-black' : 'text-gray-400'}`}>„Ç≠„É£„Çπ„ÉàÂ∞ÇÁî®</button>
            </div>
            {/* Stories row */}
            <div className="flex space-x-3 px-4 py-3 overflow-x-auto">
                {stories.map((story, idx) => (
                    <div key={idx} className="flex flex-col items-center">
                        <div className="w-16 h-16 rounded-full border-4 border-purple-400 flex items-center justify-center overflow-hidden">
                            <img src={story.img} alt={story.name} className="w-16 h-16 object-cover" />
                        </div>
                        <span className="text-xs text-gray-700 mt-1 truncate w-16 text-center">{story.name}</span>
                    </div>
                ))}
            </div>
            {/* Posts */}
            <div className="px-4">
                {(tab === 'cast' ? castPosts : posts).map((post, idx) => (
                    <div key={idx} className="border-b py-4">
                        <div className="flex items-center mb-1">
                            <img src={post.avatar} alt={post.user} className="w-10 h-10 rounded-full mr-2" />
                            <span className="font-bold text-base mr-2">{post.user}</span>
                            {('role' in post) && post.role && <span className="text-xs text-gray-400 mr-2">{post.role}</span>}
                            {('badge' in post) && post.badge && (
                                <img src={post.badge} alt="badge" className="w-5 h-5 inline-block mr-1 align-middle" />
                            )}
                            {('badgeLabel' in post) && post.badgeLabel && (
                                <span className="text-xs text-yellow-700 font-bold mr-2 align-middle">{post.badgeLabel}</span>
                            )}
                            <span className="text-xs text-gray-400">{post.time}</span>
                            <span className="ml-auto text-gray-400 text-xl">‚ô° {post.likes}</span>
                        </div>
                        {post.text && <div className="text-sm text-gray-900 whitespace-pre-line mb-2">{post.text}</div>}
                        {('img' in post) && post.img && <img src={post.img} alt="post" className="rounded-lg w-full max-w-xs mb-2" />}
                    </div>
                ))}
            </div>
            {/* Floating ÊäïÁ®ø button */}
            <button className="fixed left-1/2 -translate-x-1/2 bottom-20 z-30 bg-purple-500 text-white rounded-full px-6 py-4 shadow-lg font-bold text-lg flex items-center">
                <span className="mr-2 text-2xl">
                    <Plus /></span>ÊäïÁ®ø
            </button>
        </div>
    );
};

export default CastTimelinePage; 